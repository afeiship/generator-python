{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n(function () {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('@feizheng/next-js-core2');\n  var NxDataTransform = nx.DataTransform || require('@feizheng/next-data-transform');\n  var nxTmpl = nx.tmpl || require('@feizheng/next-tmpl');\n  var nxContentType = nx.contentType || require('@feizheng/next-content-type');\n\n  function httpRestConfg(inApiContext, inHttp, inConfig) {\n    var host = inConfig.host;\n    var request = inConfig.request;\n    var items = inConfig.items;\n    var baseUrl = host || '//' + location.host;\n\n    items.forEach(function (item) {\n      var _request = item.request;\n      var _items = item.items;\n      var _url = item.host;\n\n      nx.each(_items, function (key, _item) {\n        inApiContext[key] = function (inData, inOptions) {\n          var data = Array.isArray(inData) ? nx.mix.apply(nx, inData) : inData;\n          var action = String(_item[0]).toLowerCase();\n          var requestData = _request || request;\n          var context = requestData[0];\n          var dataType = requestData[1];\n          var contentType = nxContentType(dataType);\n          var apiPath = nxTmpl(_item[1], data);\n          var options = nx.mix({ headers: { 'Content-Type': contentType } }, _item[2], inOptions);\n\n          return inHttp[action](\n            (_url || baseUrl) + context + apiPath,\n            NxDataTransform[dataType](data),\n            options\n          );\n        };\n      });\n    });\n  }\n\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = httpRestConfg;\n  }\n})();\n"]}